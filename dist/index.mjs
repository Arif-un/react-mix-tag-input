"use client";
import O,{forwardRef as R,useEffect as C,useImperativeHandle as S,useRef as J}from"react";function I(e){return typeof e=="object"&&e.type==="tag"}function N(e){return{type:"tag",attrs:{...e.attrs}}}function f(e){let n=[];return e.forEach(r=>{var i;r.type==="paragraph"&&(n.push([]),(i=r==null?void 0:r.content)==null||i.forEach(t=>{var p,u;t.type==="text"&&t.text&&((p=n.at(-1))==null||p.push(t.text)),t.type==="tag"&&((u=n.at(-1))==null||u.push(N(t)))}))}),n}function d(e){let n=[];return e.forEach((r,i)=>{Array.isArray(n[i])||n.push({type:"paragraph",content:[]});let t=n.at(-1);typeof r=="string"&&(t!=null&&t.content)&&t.content.push({type:"text",text:r}),!Array.isArray(r)&&I(r)&&(t!=null&&t.content)&&t.content.push({type:"tag",attrs:{...r.attrs}}),Array.isArray(r)&&r.forEach(p=>{typeof p=="string"&&(t!=null&&t.content)&&t.content.push({type:"text",text:p}),typeof p=="object"&&p.type==="tag"&&(t!=null&&t.content)&&t.content.push({type:"tag",attrs:{...p.attrs}})})}),n}import{EditorContent as k,useEditor as v}from"@tiptap/react";import H from"@tiptap/extension-document";import L from"@tiptap/extension-paragraph";import j from"@tiptap/extension-text";import F from"@tiptap/extension-placeholder";import{mergeAttributes as E,Node as P}from"@tiptap/core";import{ReactNodeViewRenderer as w}from"@tiptap/react";import{NodeViewWrapper as A}from"@tiptap/react";import s from"react";function c(e){let{tagView:n,tagClassName:r}=e.extension.options,{label:i,...t}=e.node.attrs;return s.createElement(s.Fragment,null,s.createElement(A,{className:`mi-tag ${r||""}`,"data-type":"tag",as:"span"},n?n(e):s.createElement("span",{...t},i)),"\u200B")}var m=P.create({name:"tag",group:"inline",inline:!0,atom:!0,selectable:!1,parseHTML(){return[{tag:`span[data-type="${this.name}"]`}]},renderHTML({HTMLAttributes:e}){return["span",E(e)]},addNodeView(){return w(c)},addAttributes(){let e={};for(let n in this.options.attrs)e[n]={default:this.options.attrs[n]};return e}});var D={id:void 0,label:"undefined",className:void 0,style:void 0},$=R((e,n)=>{let{onChange:r,value:i,placeholder:t,readonly:p=!1,tagClassName:u,editorOptions:y,className:h,tagAttrs:V,tagView:M,...T}=e,l=J(null),o=v({editorProps:{attributes:{class:`mix-input ${h||""}`}},extensions:[H,L.configure({HTMLAttributes:{class:"mi-paragraph"}}),j,F.configure({placeholder:t}),m.configure({tagClassName:u,attrs:{...D,...V},tagView:M})],onUpdate:({editor:a})=>{var x;r==null||r(f(((x=a==null?void 0:a.getJSON())==null?void 0:x.content)||[]))},...y}),b=a=>{o==null||o.chain().focus().insertContent(a).run()};return C(()=>{let a=d(i);a.length===0&&(a=[{type:"paragraph"}]),JSON.stringify(a)!==JSON.stringify(o==null?void 0:o.getJSON().content)&&(o==null||o.commands.setContent(a))},[i]),S(n,()=>({element:l.current,editor:o,insertContent:b})),O.createElement(k,{editor:o,innerRef:l,...T})}),g=$;var dt=g;export{dt as default,f as editorValueToMixInputValue,d as mixInputValueToEditorValue};
//# sourceMappingURL=index.mjs.map